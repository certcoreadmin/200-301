Get Started with Cisco CLI
In this activity, you will learn about EXEC modes, CLI help, and the CLI error message. You will also learn how to manage the Cisco IOS configuration and how to improve user experience in the CLI.

Interacting with the device using the CLI is only one of the available options. The other one is using a GUI, when the device's operating system provides one. GUIs may not always provide all features available at the CLI. For these reasons, network devices are typically accessed through a CLI. The CLI is less resource-intensive and very stable when compared to a GUI. However, to use the CLI, the user needs to know the underlying structure that controls the system.

[
  {
    "description": "This activity will guide you through the commands that enable you to navigate between user EXEC and privileged EXEC operation modes of the Cisco IOS CLI. Also, it will show you the commands that can assist you when using the CLI.",
    "title": "Navigate Between EXEC Modes",
    "type": "Section Title"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2>"
        }
      ],
      "text": "The greater-than symbol (>) at the end of the prompt is an indication that you are accessing the User EXEC Mode."
    },
    "instructions": "Access the console of SW2. Press **Enter.**",
    "title": "Step 1",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2> ?\nExec commands:\n  access-enable    Create a temporary Access-List entry\n  access-profile   Apply user-profile to interface\n  clear            Reset functions\n  connect          Open a terminal connection\n  crypto           Encryption related commands.\n  disable          Turn off privileged commands\n  <... output omitted ...>\n  mtrace           Trace reverse multicast path from destination to source\n  name-connection  Name an existing network connection\n --More-- <space bar>\n  pad              Open a X.29 PAD connection\n  ping             Send echo messages\n  <... output omitted ...>\n  where            List active connections\n  x3               Set X.3 parameters on PAD"
        }
      ],
      "text": "\n\nYou have to press the **space** bar twice to scroll through the complete command list when you are in the User EXEC operation mode. Have this information in mind because you will soon contrast it to what you will be able to see in the Privileged EXEC Mode.\n\nThe commands are listed in alphabetical order. Note that the `configure` command is not available under User EXEC Mode.\n\nIn the outputs, similar to the previous example, many lines are omitted due to space preservation. Omitted lines are indicated with the <... output omitted ...> string."
    },
    "instructions": "Use the question mark (`?`) to view the list of commands that are available in user EXEC.\n\nWhen the display output pauses with the --More-- prompt, you can use the **space** bar to display the next page of the output.\n\nThe available commands you see when entering `?` are for this particular version of Cisco IOS. Other versions may have some different commands.",
    "notes": [
      "You have to press the space bar twice to scroll through the complete command list when you are in the User EXEC operation mode. Have this information in mind because you will soon contrast it to what you will be able to see in the Privileged EXEC Mode.",
      "The commands are listed in alphabetical order. Note that the configure command is not available under User EXEC Mode.",
      "In the outputs, similar to the previous example, many lines are omitted due to space preservation. Omitted lines are indicated with the <... output omitted ...> string."
    ],
    "title": "Step 2",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2> ?\nExec commands:\n  access-enable    Create a temporary Access-List entry\n  access-profile   Apply user-profile to interface\n  clear            Reset functions\n  connect          Open a terminal connection\n  crypto           Encryption related commands.\n  disable          Turn off privileged commands\n  <... output omitted ...>\n  mtrace           Trace reverse multicast path from destination to source\n  name-connection  Name an existing network connection\n--More--  <Enter>\n  pad              Open a X.29 PAD connection\n--More--  <Enter>\n  ping             Send echo messages\n--More--  <Ctrl-C>\nSW2>"
        }
      ],
      "text": ""
    },
    "instructions": "As you can see, when you are presented with the --More-- prompt, you can use the **space** bar to scroll through the output page by page.\n\nYou can also use the **Enter** key to scroll forward just one line. Another option is to cancel the remaining output. The method to cancel the remaining output depends on the device and operating system version. Sometimes, you need to press **Ctrl-C**, and sometimes you need to press **Q**. On SW2, you can press any key other than the **space** bar or the **Enter** key. Give it a try.",
    "title": "Step 3",
    "type": "Lab Step"
  },
  {
    "title": "Entering EXEC Mode",
    "type": "Section Title"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2> enable\nSW2#"
        }
      ],
      "text": "The last character in the prompt has changed to the octothorpe or pound sign (#). This symbol indicates that you are in the Privileged EXEC Mode."
    },
    "instructions": "Use the `enable `command to access the Privileged EXEC Mode.\n\nPasswords are not configured on any of the lab devices.",
    "notes": [
      "Passwords are not configured on any of the lab devices."
    ],
    "title": "Step 4",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2# ?\nExec commands:\n  access-enable    Create a temporary Access-List entry\n  access-profile   Apply user-profile to interface\n  access-template  Create a temporary Access-List entry\n  archive          manage archive files\n  beep             Blocks Extensible Exchange Protocol commands\n  calendar         Manage the hardware calendar\n  cd               Change current directory\n  clear            Reset functions\n  clock            Manage the system clock\n  cns              CNS agents\n  configure        Enter configuration mode\n  connect          Open a terminal connection\n  <... output omitted ...>\n  enable           Turn on privileged commands\n  eou              EAPoUDP\n--More--  <Space bar>\n  erase            Erase a filesystem\n  <... output omitted ...>"
        }
      ],
      "text": "\n\nUnder the Privileged EXEC Mode, you needed to press the **space** bar four times to get through the entire list of commands. Under User EXEC Mode, you only needed to hit the **space** bar twice.\n\nUnder the Privileged EXEC Mode, you can use the `configure` command. You cannot proceed to the Global Configuration Mode from the User EXEC Mode directly; you must traverse the Privileged EXEC Mode first."
    },
    "instructions": "Use the `?` command again to display the list of commands that are available to you under the Privileged EXEC Mode. Use the **space** bar to scroll through the entire list of the output.",
    "notes": [
      "Under the Privileged EXEC Mode, you needed to press the space bar four times to get through the entire list of commands. Under User EXEC Mode, you only needed to hit the space bar twice.",
      "Under the Privileged EXEC Mode, you can use the configure command. You cannot proceed to the Global Configuration Mode from the User EXEC Mode directly; you must traverse the Privileged EXEC Mode first."
    ],
    "title": "Step 5",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2# disable\nSW2>"
        }
      ],
      "text": "\n\nThe last character in the system prompt is again the greater-than symbol (>)."
    },
    "instructions": "Use the `disable` command to return to the User EXEC Mode.",
    "notes": [
      "The last character in the system prompt is again the greater-than symbol (>)."
    ],
    "title": "Step 6",
    "type": "Lab Step"
  },
  {
    "description": "This session will guide you through using the question mark (`?`) command, which is the *command-listing* feature of the Cisco IOS CLI. It will also demonstrate how you can take advantage of the *tab completion* feature of the Cisco IOS CLI. The lab is prepared with the devices represented in the topology, but for this task, you will only use the SW2. You will also examine CLI error messages.",
    "title": "Explore CLI Help",
    "type": "Section Title"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2> enable\nSW2#"
        }
      ],
      "text": ""
    },
    "instructions": "On SW2, use the `enable` command to access the Privileged EXEC Mode.",
    "title": "Step 7",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2# ?\nExec commands:\n  access-enable    Create a temporary Access-List entry\n  access-profile   Apply user-profile to interface\n  access-template  Create a temporary Access-List entry\n  archive          manage archive files\n  beep             Blocks Extensible Exchange Protocol commands\n  calendar         Manage the hardware calendar\n  cd               Change current directory\n  clear            Reset functions\n  clock            Manage the system clock\n  cns              CNS agents\n  configure        Enter configuration mode\n  connect          Open a terminal connection\n  <... output omitted ...>\n  enable           Turn on privileged commands\n  eou              EAPoUDP\n--More--  <space bar>\n  <... output omitted ...>"
        }
      ],
      "text": "\n\nThe list is quite long. You have to use the **space** bar four times to get through the entire list."
    },
    "instructions": "Use the question mark (`?`) to display all commands that are available under the Privileged EXEC Mode.\n\nUse the **space** bar to scroll through the entire list of the output.",
    "notes": [
      "The list is quite long. You have to use the space bar four times to get through the entire list."
    ],
    "title": "Step 8",
    "type": "Lab Step"
  },
  {
    "description": "Table:\n{\n  \"headers\": [],\n  \"rows\": [\n    [\n      \"Context-sensitive help\",\n      \"Provides a list of commands or the arguments that are associated with a specific command.\"\n    ],\n    [\n      \"Error notification message\",\n      \"Identifies problems with commands that you have entered so that you can alter or correct them.\"\n    ]\n  ]\n}",
    "title": "CLI Help",
    "type": "Section Title"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2# s?\n*s=show\nsdlc        send    set        setup\nshow        slip    spec-file  ssh\nstart-chat  systat  "
        }
      ],
      "text": "\n\nThe output shows (look at the *s = show in the first line of the output) that there is an exception to the normal command parsing rules. The CLI will interpret the letter \"s\" all by itself as \"show,\" although more than one command starts with the letter \"s.\" This feature is specific to the device and the operating system version. While it will work on SW2 in this lab, it may not work on all devices. Abbreviating \"show\" with the characters \"sh\" will be useful on more Cisco IOS devices."
    },
    "instructions": "List only the commands that start with the letter \"s\" by entering `s?` at the line prompt.",
    "title": "Step 9",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2# sh<tab>\nSW2# show"
        }
      ],
      "text": "The CLI parser expands the unambiguous abbreviation into the full command."
    },
    "instructions": "Try out the **Tab** completion feature.\n\nLike command abbreviation, **Tab** completion works as long as you have entered enough characters to remove ambiguity. Type `sh` and then press the **Tab** key. Next, use the backspace to erase the resulting command.",
    "title": "Step 10",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2# con<tab>\nSW2# con?\nconfigure  connect  \nSW2# con"
        }
      ],
      "text": "When you used the **Tab** to complete the command abbreviation \"con,\" it did not work. The command parser simply redisplayed \"con.\" Using the question mark (`?`) at this point shows that there are two commands that begin with \"con.\" To be unambiguous, you must use at least \"conf\" as your abbreviation for *configure*."
    },
    "instructions": "You may find the **Tab** completion helpful because it prevents you from repeating the attempts to use commands that are ambiguously abbreviated. The Tab completion is especially useful when you are writing long commands using abbreviations.\n\nIf there are multiple matches for the abbreviation you entered, the **Tab** completion will not work. If you are not sure why you can always use the question mark assistance (`?`) to determine why your entry is ambiguous. To try this on your own, abbreviate the `configure` command by entering the letters \"con\" and press the **Tab** key.",
    "title": "Step 11",
    "type": "Lab Step"
  },
  {
    "instructions": "You will not proceed to the Global Configuration Mode during this session. Use the **Backspace** key to delete the \"con\" letters.",
    "title": "Step 12",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2# show ?\n  aaa                Show AAA values\n  access-expression  List access expression\n  <... output omitted ...>\n --More—  <space bar>\n  <... output omitted ...>"
        }
      ],
      "text": "\n\nThere are many `show` commands available in the Cisco IOS CLI. To scroll through the entire list, press the **space** bar nine times."
    },
    "instructions": "You have just demonstrated that the question mark (`?`) and the **Tab** completion work for commands.\n\nThe question mark (`?`) and the **Tab** completion are also helpful when you want to display the arguments requested by the syntax. For example, if you wish to display all arguments that you can or should use with the `show` command, use the question mark (`?`) after the word `show`. Be careful to separate the question mark with a space.",
    "notes": [
      "There are many show commands available in the Cisco IOS CLI. To scroll through the entire list, press the space bar nine times."
    ],
    "title": "Step 13",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2# show r?\nradius     region     registry        reload\nresource   rhosts     rib             rif\nroute-map  route-tag  running-config "
        }
      ],
      "text": ""
    },
    "instructions": "As with commands, you can combine explicit characters followed by the question mark to display a subset of the argument options.\n\nFor example, use `show r?` to display all `show` command options that start with the letter \"r.\"",
    "title": "Step 14",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2# sh<tab> \nSW2# show run<tab>\nSW2# show running-config \nBuilding configuration...\n\nCurrent configuration : 885 bytes\n!\nversion 15.1\nservice timestamps debug datetime msec\nservice timestamps log datetime msec\nno service password-encryption\nservice compress-config\n<... output omitted ...>"
        }
      ],
      "text": "You can look at the example of abbreviating the command and using **Tab** to determine the arguments for the `show running-config` command. Feel free to experiment independently.\n\nYou may also find **Tab** completion useful if you are working with someone. When you are typing in the commands, you might use abbreviated versions, and the other person might not know the commands you intended. But, if you decide to use abbreviations with **Tab** completion, Cisco CLI will always display the entire command verbiage, making it clear to everyone the commands that were used."
    },
    "instructions": "Experiment with the command abbreviation and **Tab** completion until you feel comfortable using them.",
    "notes": [
      "You may also find Tab completion useful if you are working with someone. When you are typing in the commands, you might use abbreviated versions, and the other person might not know the commands you intended. But, if you decide to use abbreviations with Tab completion, Cisco CLI will always display the entire command verbiage, making it clear to everyone the commands that were used."
    ],
    "title": "Step 15",
    "type": "Lab Step"
  },
  {
    "description": "Table:\n{\n  \"headers\": [],\n  \"rows\": [\n    [\n      \"% Ambiguous command\",\n      \"You did not enter enough characters for your device to uniquely recognize the command.\",\n      \"Repeat the entry, followed by the question mark `?` Make sure there are no spaces.\",\n      \"The CLI displays possible keywords that you can enter with the command.\"\n    ],\n    [\n      \"% Incomplete command\",\n      \"You did not enter all keywords or values that are required by this command.\",\n      \"Repeat the entry, followed by a space and the question mark `?`.\"\n    ],\n    [\n      \"% Invalid input detected at ‘^’ marker\",\n      \"You entered the command incorrectly. The ^ marks the first element with the error.\",\n      \"Enter the question mark `?` to display all commands or command options that you can use.\"\n    ]\n  ]\n}",
    "title": "CLI Error Messages",
    "type": "Section Title"
  },
  {
    "description": "Now you will examine the startup and running configurations of a Cisco IOS device. The lab is prepared with the devices that are represented in the topology, but for this task, you will only use SW2. In the end, you will erase the configuration of SW2. The lab system will be correctly configured the next time you initialize the lab.\n\nWhen you first access a device for the first time, the prompt includes the hostname that is already configured on the device. You will modify the hostname configuration parameter on the switch as you experiment with the startup and running configurations.",
    "title": "Manage Cisco IOS Configuration",
    "type": "Section Title"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2# configure terminal\nEnter configuration commands, one per line.  End with CNTL/Z.\nSW2(config)# hostname Temp\nTemp(config)# end\nTemp#"
        }
      ],
      "text": "Immediately after you change the hostname on the switch, the system prompt reflects the new name.\n\nBy changing the hostname, you have modified the running configuration of the switch. The startup configuration has not changed.\n\nRunning configuration and startup configurations are two different configurations of the device. As their names indicate, the running configuration is the one that is currently active on the device. Each configuration change that you make is immediately reflected in the running configuration. The startup configuration is the configuration with which the device starts when switched on.\n\n**Tab** completion was available for the `show` commands but not for the `hostname` command. The `hostname` command takes as the argument a freeform variable. In other words, what follows after the `hostname` word, can be almost anything. There is no way for the Cisco IOS parser to guess what you wish this string to be."
    },
    "instructions": "On SW2, enter the Global Configuration Mode and change the hostname of the switch to \"Temp\" and then return to the Privileged EXEC Mode. To change the device hostname, use the `hostname` `device-name` command. Try using the **Tab** completion with the `hostname` command and note the result. Then, exit the configuration mode by using the `end` command.",
    "notes": [
      "Running configuration and startup configurations are two different configurations of the device. As their names indicate, the running configuration is the one that is currently active on the device. Each configuration change that you make is immediately reflected in the running configuration. The startup configuration is the configuration with which the device starts when switched on."
    ],
    "title": "Step 16",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "Temp# sh<tab>\nTemp# show r?\nradius     region     registry        reload\nresource   rhosts     rib             rif\nroute-map  route-tag  running-config  \n\nTemp# show run<tab>\nTemp# show running-config | inc<tab>\nTemp# show running-config | include hostname\nhostname Temp"
        }
      ],
      "text": "Insisting on the usage of the **Tab** completion and the question mark contextual help intends to remind you that these options are always available to you. They will not be demonstrated any further in this task, but feel free to take advantage of them at any time.\n\nOnly one line in the running configuration includes the string \"hostname\" and it is the `hostname` command that sets the name of the device to \"Temp.\""
    },
    "instructions": "Examine what is configured in the running configuration, but use the `include` filter to show only the lines that include the string \"hostname.\" The filtering commands of the CLI are introduced after you type in the command by typing the pipe character **|**. The pipe character separates the main command from the filtering specification. The filtering criteria are specified by choosing a filtering parameter and a filtering expression. The filtering syntax will be described in more detail later, and in this task, you will explore the usage of the `include` filtering option. The `include` filtering parameter displays only those lines of the output that contain the specified filtering expression.",
    "title": "Step 17",
    "type": "Lab Step"
  },
  {
    "description": "Table:\n{\n  \"headers\": [],\n  \"rows\": [\n    [\n      \"`show running-config`\",\n      \"Displays the current running configuration. You can also use filters. For example, you can use the `show running-config interface GigabitEthernet0/1`** **command to display only the interface GigabitEthernet0/1 running configuration.\"\n    ],\n    [\n      \"`show startup-config`\",\n      \"Displays the startup configuration stored in NVRAM.\"\n    ],\n    [\n      \"`configure terminal`\",\n      \"Enters the Global Configuration Mode, where you can interactively change the configuration in RAM (the running-config), using console or remote terminal access.\"\n    ],\n    [\n      \"`copy running-config startup-config`\",\n      \"Saves the running configuration to startup-config file in NVRAM.\"\n    ],\n    [\n      \"`copy startup-config running-config`\",\n      \"Startup configuration from NVRAM is merged into the running configuration.\"\n    ],\n    [\n      \"`erase startup-config`\",\n      \"Deletes the saved startup-config file in NVRAM.\"\n    ]\n  ]\n}",
    "title": "Managing Cisco IOS Configuration",
    "type": "Section Title"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "Temp# show startup-config | include hostname\nhostname SW2"
        }
      ],
      "text": "When you make changes to the running configuration, it does not affect the startup configuration. The startup configuration still has the hostname SW2."
    },
    "instructions": "Display the startup configuration filtered using the `include` filter to show only the lines that include the string \"hostname.\"",
    "title": "Step 18",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "Temp# reload\n\nSystem configuration has been modified. Save? [yes/no]: no\nProceed with reload? [confirm] <Enter>\n<... output omitted ...>\nPress RETURN to get started! <Enter>\n<... output omitted ...>\nSW2>"
        }
      ],
      "text": "After the reload, the hostname has returned to SW2, as you can see from the prompt.\n\nTo save the changes made to the running configuration, you have to copy the running configuration over the startup configuration."
    },
    "instructions": "Use the `reload` command to reboot the switch. This action will cause the switch to lose the running configuration and load the startup configuration at the restart.\n\nAnswer **No** if you are asked to save the modified configuration. The goal is to demonstrate how to return to the old configuration. If you save the modified configuration, the system will overwrite the old startup configuration.",
    "title": "Step 19",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "SW2> enable\nSW2# configure terminal\nEnter configuration commands, one per line.  End with CNTL/Z.\nSW2(config)# hostname ThisWillStick\nThisWillStick(config)# end\nThisWillStick#"
        }
      ],
      "text": "On SW2, enter the following commands:"
    },
    "instructions": "Change the hostname one more time.\n\nThis time, set the hostname to \"ThisWillStick.\"",
    "title": "Step 20",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "ThisWillStick# copy running-config startup-config\nDestination filename [startup-config]? <Enter>\nBuilding configuration...\nCompressed configuration from 936 bytes to 641 bytes[OK]\nThisWillStick#"
        }
      ],
      "text": "On ThisWillStick, enter the following commands:\n\nAfter this copy operation, the changed hostname is saved in the startup configuration and will now \"survive\" the reload event.\n\nOptionally, you can use the `show startup-configuration` command to verify that the change is saved."
    },
    "instructions": "Copy the running configuration over the startup configuration.",
    "notes": [
      "Optionally, you can use the show startup-configuration command to verify that the change is saved."
    ],
    "title": "Step 21",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "ThisWillStick# reload\nProceed with reload? [confirm] <Enter>\n<... output omitted ...>\nPress RETURN to get started! <Enter>\n<... output omitted ...>\nThisWillStick>"
        }
      ],
      "text": "On ThisWillStick, enter the following commands:\n\nThe hostname is, ThisWillStick."
    },
    "instructions": "Use the `reload` command again, and verify that the new hostname endures the reboot.",
    "title": "Step 22",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "ThisWillStick> enable\nThisWillStick# erase startup-config \nErasing the nvram filesystem will remove all configuration files! Continue? [confirm]  <Enter>\n[OK]\nErase of nvram: complete\n*Jun  25 00:40:12.990: %SYS-7-NV_BLOCK_INIT: Initialized the geometry of nvram\nThisWillStick#"
        }
      ],
      "text": "On ThisWillStick, enter the following commands:\n\nAlthough the system erased the startup configuration, this action does not have an effect on the running configuration. In fact (do not do this now), you could use the `copy running-config startup-config` command to restore the startup configuration back to what it was before the erase."
    },
    "instructions": "Now erase the startup configuration with the `erase startup-config` command. This command cannot be shortened.",
    "notes": [
      "Although the system erased the startup configuration, this action does not have an effect on the running configuration. In fact (do not do this now), you could use the copy running-config startup-config command to restore the startup configuration back to what it was before the erase."
    ],
    "title": "Step 23",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "ThisWillStick# show startup-config \nstartup-config is not present"
        }
      ],
      "text": "On ThisWillStick, enter the following commands:"
    },
    "instructions": "Verify that the system actually erased the startup configuration using `show startup-config` command.",
    "title": "Step 24",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "ThisWillStick# reload\nProceed with reload? [confirm] <Enter>\n<... output omitted ...>\nPress RETURN to get started!  <Enter>\nSwitch>"
        }
      ],
      "text": "On ThisWillStick, enter the following commands:"
    },
    "instructions": "Reload the switch.\n\nAfter the reload, the switch will attempt to read the startup configuration and find it missing. This situation will essentially set the switch back to the factory default state. Do not worry. When the lab is reinitialized, the lab system will appropriately set all device configurations.",
    "title": "Step 25",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "Switch> enable\nSwitch# show running-config | include hostname\nhostname Switch\nSwitch#"
        }
      ],
      "text": "On Switch, enter the following commands:"
    },
    "instructions": "Verify that the hostname parameter in the running configuration has the default value (Switch).",
    "title": "Step 26",
    "type": "Lab Step"
  },
  {
    "description": "In this session, you will practice using terminal history. Recalling recently entered commands is useful because it reduces typing. Once you recall a command, you can simply press **Enter** to use the exact same command, or you can modify it. The lab is prepared with the devices that are represented in the topology, but for this session, you will only use R1.\n\nThe prompt displays the hostname that is configured on the device. You will modify this parameter of the router configuration as you experiment with the startup and running configurations.",
    "title": "Improve User Experience in the CLI",
    "type": "Section Title"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "R1> enable\nR1#"
        }
      ],
      "text": ""
    },
    "instructions": "On R1, use the `enable` command to access the Privileged EXEC Mode.",
    "title": "Step 27",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "R1# show ip route\nCodes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP\n       D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area \n       N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2\n       E1 - OSPF external type 1, E2 - OSPF external type 2\n       i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2\n       ia - IS-IS inter area, * - candidate default, U - per-user static route\n       o - ODR, P - periodic downloaded static route, H - NHRP, l - LISP\n       + - replicated route, % - next hop override\n\nGateway of last resort is not set\n\n      10.0.0.0/8 is variably subnetted, 4 subnets, 2 masks\nC        10.10.1.0/24 is directly connected, Ethernet0/0\nL        10.10.1.1/32 is directly connected, Ethernet0/0\nC        10.10.3.0/24 is directly connected, Loopback0\nL        10.10.3.1/32 is directly connected, Loopback0"
        },
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "R1# show clock\n*00:47:02.857 PST Tue Jun 25 2019"
        },
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "R1# show ip interface brief\nInterface                  IP-Address      OK? Method Status                Protocol\nEthernet0/0                10.10.1.1       YES NVRAM  up                    up      \nEthernet0/1                unassigned      YES NVRAM  administratively down down    \nEthernet0/2                unassigned      YES NVRAM  administratively down down    \nEthernet0/3                unassigned      YES NVRAM  administratively down down    \nSerial1/0                  unassigned      YES NVRAM  administratively down down    \nSerial1/1                  unassigned      YES NVRAM  administratively down down    \nSerial1/2                  unassigned      YES NVRAM  administratively down down    \nSerial1/3                  unassigned      YES NVRAM  administratively down down    \nLoopback0                  10.10.3.1       YES NVRAM  up                    up   "
        },
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "R1# configure terminal\nEnter configuration commands, one per line.  End with CNTL/Z.\nR1(config)# clock timezone EST 0\n*Jun  25 08:48:41.931: %SYS-6-CLOCKUPDATE: System clock has been updated from 00:48:41 PST Tue Jun 25 2019 to 08:48:41 EST Tue Jun 25 2019, configured from console by console.\nR1(config)# no ip domain-lookup "
        }
      ],
      "text": "On R1, enter the following commands:\n\nThe time and date that you see in your output are different than the output presented here."
    },
    "instructions": "Enter the sequence of commands that are shown below.\n\nThe sequence is rather arbitrary. It includes three EXEC Mode commands and two Global Configuration Mode commands. Do not worry that the commands are new to you. You are typing the sequence of the commands only to fill the terminal history.\n\n`show ip route` (in Privileged EXEC Mode)\n\n`show clock` (in Privileged EXEC Mode)\n\n`show ip interface brief `(in Privileged EXEC Mode)\n\n`configure terminal` (to go in Global Configuration Mode)\n\n`clock timezone EST 0` (in Global Configuration Mode)\n\n`no ip domain-lookup` (in Global Configuration Mode)",
    "title": "Step 28",
    "type": "Lab Step"
  },
  {
    "description": "Table:\n{\n  \"headers\": [],\n  \"rows\": [\n    [\n      \"Ctrl-A\",\n      \"Moves the cursor to the beginning of the command line\"\n    ],\n    [\n      \"Ctrl-C\",\n      \"Aborts the current command and exits the configuration mode\"\n    ],\n    [\n      \"Ctrl-E\",\n      \"Moves the cursor to the end of the command line\"\n    ],\n    [\n      \"Esc-B\",\n      \"Moves the cursor back one word\"\n    ],\n    [\n      \"Esc-F\",\n      \"Moves the cursor forward one word\"\n    ],\n    [\n      \"Ctrl-B\",\n      \"Moves the cursor back one character\"\n    ],\n    [\n      \"Ctrl-F\",\n      \"Moves the cursor forward one character\"\n    ],\n    [\n      \"Ctrl-D\",\n      \"Deletes a single character at the cursor\"\n    ],\n    [\n      \"Backspace\",\n      \"Removes one character to the left of the cursor\"\n    ],\n    [\n      \"Ctrl-R\",\n      \"Redisplays the current command line\"\n    ],\n    [\n      \"Ctrl-U\",\n      \"Erases a line\"\n    ],\n    [\n      \"Ctrl-W\",\n      \"Erases a word to the left of the cursor\"\n    ],\n    [\n      \"Ctrl-Z\",\n      \"Ends the configuration mode and returns to the EXEC prompt\"\n    ],\n    [\n      \"Tab\",\n      \"Completes a partially entered command if enough characters have been entered to make it unambiguous\"\n    ],\n    [\n      \"Ctrl-Shift-6\",\n      \"Allows the user to interrupt a Cisco IOS process such as ping or traceroute\"\n    ],\n    [\n      \"Ctrl-P or Up Arrow\",\n      \"Recalls last (previous) commands\"\n    ],\n    [\n      \"Ctrl-N or Down Arrow\",\n      \"Recalls more recent commands\"\n    ]\n  ]\n}",
    "title": "Improving User Experience in the CLI",
    "type": "Section Title"
  },
  {
    "instructions": "Now, while remaining in the configuration mode, use the **Up Arrow **and **Down Arrow** keys to scroll through the terminal history buffer.\n\nNote that you do not see the EXEC commands. There is a separate terminal history buffer for the configuration and EXEC modes.",
    "title": "Step 29",
    "type": "Lab Step"
  },
  {
    "instructions": "Leave the configuration mode (use `end`, `exit`, or press **Ctrl-Z**) to return to the Privileged EXEC Mode.",
    "title": "Step 30",
    "type": "Lab Step"
  },
  {
    "instructions": "Again, use the **Up Arrow** and **Down Arrow** keys to show that you can recall previous commands.",
    "title": "Step 31",
    "type": "Lab Step"
  },
  {
    "instructions": "Recall the `show ip route` command and press the **Enter** key to resubmit it without any edits.\n\nIt is a common exercise to revisit `show` commands. The `show` commands display operational status and enable you to follow on the effect of the configuration changes you make on the Cisco IOS device.",
    "title": "Step 32",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "R1# snow ip interface brief\n      ^\n% Invalid input detected at '^' marker."
        }
      ],
      "text": "\n\nManaging typos is one of the best uses of the terminal history and the command-line editing tools."
    },
    "instructions": "Now type the following command, `snow ip interface brief`, purposely mistyping \"show\" as \"snow.\"",
    "title": "Step 33",
    "type": "Lab Step"
  },
  {
    "instructions": "Follow this sequence to quickly and easily correct the typographical error and resubmit the corrected command:\n\nPress the **Up Arrow** key once to retrieve the previous command.\n\nPress **Ctrl-A** to move the cursor to the beginning of the line.\n\nPress the **Right Arrow** twice to move the cursor to the right of the incorrect letter \"n.\"\n\nPress **Backspace** to erase the letter \"n.\"\n\nPress **h** to insert the correct letter \"h.\"\n\nPress **Enter** to resubmit the corrected command.",
    "title": "Step 34",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "R1# configure terminal\nEnter configuration commands, one per line.  End with CNTL/Z.\nR1(config)#"
        }
      ],
      "text": "\n\nAs before, you will use commands that you are not familiar with to demonstrate the power of the terminal history buffer. Make sure to focus on how beneficial the terminal history buffer can be."
    },
    "instructions": "Return to the Global Configuration Mode.",
    "notes": [
      "As before, you will use commands that you are not familiar with to demonstrate the power of the terminal history buffer. Make sure to focus on how beneficial the terminal history buffer can be."
    ],
    "title": "Step 35",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "R1(config)# interface Serial 1/0\nR1(config-if)# description Link to SP1\nR1(config-if)# no shutdown\n*Jun 25 08:51:13.776: %LINK-3-UPDOWN: Interface Serial1/0, changed state to up\n*Jun 25 08:51:14.780: %LINEPROTO-5-UPDOWN: Line protocol on Interface Serial1/0, changed state to up\nR1(config-if)#"
        }
      ],
      "text": ""
    },
    "instructions": "Configure the description of interface Serial 1/0 to \" Link to SP1\" and enable the interface by overriding the default `shutdown` command.",
    "title": "Step 36",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "R1(config)# interface Serial 1/1\nR1(config-if)# description Link to SP2\nR1(config-if)# no shutdown\n*Jun 25 09:02:22.638: %LINK-3-UPDOWN: Interface Serial1/1, changed state to up\n*Jun 25 09:02:23.642: %LINEPROTO-5-UPDOWN: Line protocol on Interface Serial1/1, changed state to up\nR1(config-if)#"
        }
      ],
      "text": "The resulting sequence should look like the following example:"
    },
    "instructions": "Repeat a similar configuration for interface Serial 1/1.\n\nThe following process can make this task relatively easy:\n\nPress the **Up Arrow** key three times to recall the interface command. Edit Serial 1/0 to be 1/1 and press the **Enter** key to resubmit the edited command.\n\nPress the **Up Arrow** key three times to recall the description command. Edit SP1 to be SP2 and press the **Enter** key to resubmit the edited command.\n\nPress the **Up Arrow** key three times to recall the `no shutdown` command, and press the **Enter** key to resubmit the command without any editing.\n\nNote that the terminal history stores all recently entered commands, including the ones that were entered with errors and were not executed.",
    "notes": [
      "Note that the terminal history stores all recently entered commands, including the ones that were entered with errors and were not executed."
    ],
    "title": "Step 37",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": null,
      "text": "Optionally, you can save the running configuration to the startup configuration, but it is not necessary in the automated lab environment."
    },
    "instructions": "Leave the configuration mode using `end`, `exit` (two times), or pressing **Ctrl-Z** to return to the privileged EXEC.",
    "title": "Step 38",
    "type": "Lab Step"
  },
  {
    "description": "Table:\n{\n  \"headers\": [],\n  \"rows\": [\n    [\n      \"`begin`\",\n      \"Shows all output lines, starting with the line that matches the filtering expression\"\n    ],\n    [\n      \"`exclude`\",\n      \"Excludes all output lines that match the filtering expression\"\n    ],\n    [\n      \"`include`\",\n      \"Includes all output lines that match the filtering expression\"\n    ],\n    [\n      \"`section`\",\n      \"Shows the entire section that starts with the filtering expression\"\n    ]\n  ]\n}",
    "title": "Filtering Parameters",
    "type": "Section Title"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "R1# show running-config | begin interface\ninterface Loopback0\n ip address 10.10.3.1 255.255.255.0\n!\ninterface Ethernet0/0\n description Link to SW2\n ip address 10.10.1.1 255.255.255.0\n!\ninterface Ethernet0/1\n no ip address\n shutdown\n!\ninterface Ethernet0/2\n no ip address\n shutdown\n!\ninterface Ethernet0/3\n no ip address\n shutdown\n!\ninterface Serial1/0\n description Link to SP1\n no ip address\n serial restart-delay 0\n!         \ninterface Serial1/1\n description Link to SP2\n no ip address\n serial restart-delay 0\n!\ninterface Serial1/2\n no ip address\n shutdown\n serial restart-delay 0\n!\ninterface Serial1/3\n no ip address\n shutdown\n serial restart-delay 0\n!\nip forward-protocol nd\n!\n!\nno ip http server\nno ip http secure-server\n!\n!\n!         \n!\ncontrol-plane\n!\n!\n!\n!\n!\n!\n!\nline con 0\n logging synchronous\nline aux 0\nline vty 0 4\n login\n transport input all\n!\n!\nend"
        },
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "R1# show running-config | include interface\ninterface Loopback0\ninterface Ethernet0/0\ninterface Ethernet0/1\ninterface Ethernet0/2\ninterface Ethernet0/3\ninterface Serial1/0\ninterface Serial1/1\ninterface Serial1/2\ninterface Serial1/3"
        }
      ],
      "text": "You should see the following output when using the `begin` option:\n\nYou should see the following output when using the `include` option:"
    },
    "instructions": "On the R1 router, use the `begin` and `include` options with the `show running-config` command and filtering expression `interface`.",
    "title": "Step 39",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "R1# show running-config | section interface\ninterface Loopback0\n ip address 10.10.3.1 255.255.255.0\ninterface Ethernet0/0\n description Link to SW2\n ip address 10.10.1.1 255.255.255.0\ninterface Ethernet0/1\n no ip address\n shutdown\ninterface Ethernet0/2\n no ip address\n shutdown\ninterface Ethernet0/3\n no ip address\n shutdown\ninterface Serial1/0\n description Link to SP1\n no ip address\n serial restart-delay 0\ninterface Serial1/1\n description Link to SP2\n no ip address\n serial restart-delay 0\ninterface Serial1/2\n no ip address\n shutdown\n serial restart-delay 0\ninterface Serial1/3\n no ip address\n shutdown\n serial restart-delay 0"
        }
      ],
      "text": "You should see the following output when using the `section` option:"
    },
    "instructions": "On the R1 router, use the `section` option with the `show running-config` command and filtering expression `interface`.",
    "title": "Step 40",
    "type": "Lab Step"
  },
  {
    "answer": {
      "codeBlocks": [
        {
          "classes": "language-cisco-ios font-mono hljs",
          "content": "R1# show running-config | exclude !\nBuilding configuration...\n \nCurrent configuration : 1223 bytes\nversion 15.2\nservice timestamps debug datetime msec\nservice timestamps log datetime msec\nno service password-encryption\nhostname R1\nboot-start-marker\nboot-end-marker\nno aaa new-model\nclock timezone EST 0 0\nmmi polling-interval 60\nno mmi auto-configure\nno mmi pvc\nmmi snmp-timeout 180\n \n \nno ip domain lookup\nip cef\nno ipv6 cef\nmultilink bundle-name authenticated\nredundancy\ninterface Loopback0\n ip address 10.10.3.1 255.255.255.0\ninterface Ethernet0/0\n description Link to SW2\n ip address 10.10.1.1 255.255.255.0\ninterface Ethernet0/1\n no ip address\n shutdown\ninterface Ethernet0/2\n no ip address\n shutdown\ninterface Ethernet0/3\n no ip address\n shutdown\ninterface Serial1/0\n description Link to SP1\n no ip address\n serial restart-delay 0\ninterface Serial1/1\n description Link to SP2\n no ip address\n serial restart-delay 0\ninterface Serial1/2\n no ip address\n shutdown\n serial restart-delay 0\ninterface Serial1/3\n no ip address\n shutdown\n serial restart-delay 0\nip forward-protocol nd\nno ip http server\nno ip http secure-server\ncontrol-plane\nline con 0\n logging synchronous\nline aux 0\nline vty 0 4\n login\n transport input all\nend"
        }
      ],
      "text": "You should see the following output when using the `exclude` option:"
    },
    "instructions": "On the R1 router, use the `exclude` option with the `show running-config` command and filtering expression `!`.",
    "title": "Step 41",
    "type": "Lab Step"
  }
]